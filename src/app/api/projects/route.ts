import { NextResponse } from "next/server";
import { pool } from "../../../lib/db";

const projects = [
  {
    type: 1,
    subTitle: "Kh√°ch S·∫°n",
    title: "D·ª± √°n kh√°ch s·∫°n M∆∞·ªùng Thanh",
    summary:
      "üè® Ch√†o m·ª´ng ƒë·∫øn v·ªõi d·ª± √°n chƒÉn ga g·ªëi n·ªám d√†nh ri√™ng cho kh√°ch s·∫°n c·ªßa ch√∫ng t√¥i - n∆°i mang ƒë·∫øn s·ª± ho√†n h·∫£o cho m·ªói kh√¥ng gian ngh·ªâ ng∆°i c·ªßa qu√Ω v·ªã!",
    link: "/",
    image: "/images/home/phong1.jpeg",
  },
  {
    type: 2,
    subTitle: "Homestay",
    title: "D·ª± √°n homestay ƒê√† L·∫°t",
    summary:
      "üåü T·∫°o ƒëi·ªÉm nh·∫•n ƒë·ªôc ƒë√°o: V·ªõi c√°c b·ªô chƒÉn ga g·ªëi n·ªám phong c√°ch v√† ƒëa d·∫°ng, ch√∫ng t√¥i s·∫Ω gi√∫p kh√¥ng gian homestay c·ªßa b·∫°n tr·ªü th√†nh m·ªôt n∆°i ƒë·∫∑c bi·ªát, t·∫°o ·∫•n t∆∞·ª£ng m·∫°nh m·∫Ω v·ªõi m·ªói kh√°ch h√†ng.",
    link: "/",
    image: "/images/home/phong2.jpeg",
  },
  {
    type: 2,
    subTitle: "Chung c∆∞",
    title: "D·ª± √°n CƒÉn h·ªô cao c·∫•p",
    summary:
      "üè¢ Ti·∫øt ki·ªám kh√¥ng gian: V·ªõi thi·∫øt k·∫ø th√¥ng minh v√† t·ªëi ∆∞u h√≥a kh√¥ng gian, ch√∫ng t√¥i s·∫Ω gi√∫p cƒÉn h·ªô c·ªßa b·∫°n tr·ªü n√™n tho√°ng ƒë√£ng h∆°n, t·∫≠n d·ª•ng t·ªëi ƒëa di·ªán t√≠ch s·ª≠ d·ª•ng.",
    link: "/",
    image: "/images/home/phong3.jpeg",
  },
];

export async function GET() {
  try {
    // const results = await pool.query(
    //   `SELECT * FROM qxqarhl4yzwm_anri.Projects;`,
    // );

    let json_response = {
      status: "success",
      data: projects,
    };
    return NextResponse.json(json_response);
  } catch (error: any) {
    let error_response = {
      status: "error",
      message: error.message,
    };
    return new NextResponse(JSON.stringify(error_response), {
      status: 500,
      headers: { "Content-Type": "application/json" },
    });
  }
}

export async function POST(req: Request) {
  try {
    const data = await req.json();
    const query = `UPDATE Projects SET description='${data.description}',name='${data.name}',image='${data.image}',type='${data.type}' WHERE id='${data.id}'`;
    console.log({ query });

    const results = await pool.query(query);

    let json_response = {
      status: "success",
      data: results,
    };

    return NextResponse.json(json_response);
  } catch (error: any) {
    let error_response = {
      status: "error",
      message: error.message,
    };
    return new NextResponse(JSON.stringify(error_response), {
      status: 500,
      headers: { "Content-Type": "application/json" },
    });
  }
}

export async function PUT(req: Request) {
  try {
    const data = await req.json();
    const query = `INSERT INTO qxqarhl4yzwm_anri.Projects (image, name, description, type) VALUES ('${data.image}','${data.name}','${data.description}','${data.type}');`;
    console.log({ query });
    const results = await pool.query(query);

    let json_response = {
      status: "success",
      data: results,
    };

    return NextResponse.json(json_response);
  } catch (error: any) {
    let error_response = {
      status: "error",
      message: error.message,
    };
    return new NextResponse(JSON.stringify(error_response), {
      status: 500,
      headers: { "Content-Type": "application/json" },
    });
  }
}

export async function DELETE(req: Request) {
  try {
    const data = await req.json();
    const query = `delete from qxqarhl4yzwm_anri.Projects where id = '${data.id}';`;
    console.log({ query });
    const results = await pool.query(query);

    let json_response = {
      status: "success",
      data: results,
    };

    return NextResponse.json(json_response);
  } catch (error: any) {
    let error_response = {
      status: "error",
      message: error.message,
    };
    return new NextResponse(JSON.stringify(error_response), {
      status: 500,
      headers: { "Content-Type": "application/json" },
    });
  }
}
