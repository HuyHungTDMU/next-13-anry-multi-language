import { NextResponse } from "next/server";
import imgPhong1 from "../../../../public/images/home/phong1.jpeg";
import imgPhong2 from "../../../../public/images/home/phong2.jpeg";
import imgPhong3 from "../../../../public/images/home/phong3.jpeg";

export async function GET() {
  try {
    const projects = [
      {
        type: 1,
        subTitle: "Kh√°ch S·∫°n",
        title: "D·ª± √°n kh√°ch s·∫°n M∆∞·ªùng Thanh",
        summary:
          "üè® Ch√†o m·ª´ng ƒë·∫øn v·ªõi d·ª± √°n chƒÉn ga g·ªëi n·ªám d√†nh ri√™ng cho kh√°ch s·∫°n c·ªßa ch√∫ng t√¥i - n∆°i mang ƒë·∫øn s·ª± ho√†n h·∫£o cho m·ªói kh√¥ng gian ngh·ªâ ng∆°i c·ªßa qu√Ω v·ªã!",
        link: "/",
        image: imgPhong1,
      },
      {
        type: 2,
        subTitle: "Homestay",
        title: "D·ª± √°n homestay ƒê√† L·∫°t",
        summary:
          "üåü T·∫°o ƒëi·ªÉm nh·∫•n ƒë·ªôc ƒë√°o: V·ªõi c√°c b·ªô chƒÉn ga g·ªëi n·ªám phong c√°ch v√† ƒëa d·∫°ng, ch√∫ng t√¥i s·∫Ω gi√∫p kh√¥ng gian homestay c·ªßa b·∫°n tr·ªü th√†nh m·ªôt n∆°i ƒë·∫∑c bi·ªát, t·∫°o ·∫•n t∆∞·ª£ng m·∫°nh m·∫Ω v·ªõi m·ªói kh√°ch h√†ng.",
        link: "/",
        image: imgPhong2,
      },
      {
        type: 2,
        subTitle: "Chung c∆∞",
        title: "D·ª± √°n CƒÉn h·ªô cao c·∫•p",
        summary:
          "üè¢ Ti·∫øt ki·ªám kh√¥ng gian: V·ªõi thi·∫øt k·∫ø th√¥ng minh v√† t·ªëi ∆∞u h√≥a kh√¥ng gian, ch√∫ng t√¥i s·∫Ω gi√∫p cƒÉn h·ªô c·ªßa b·∫°n tr·ªü n√™n tho√°ng ƒë√£ng h∆°n, t·∫≠n d·ª•ng t·ªëi ƒëa di·ªán t√≠ch s·ª≠ d·ª•ng.",
        link: "/",
        image: imgPhong3,
      },
    ];

    let json_response = {
      status: "success",
      data: projects,
    };
    return NextResponse.json(json_response);
  } catch (error: any) {
    let error_response = {
      status: "error",
      message: error.message,
    };
    return new NextResponse(JSON.stringify(error_response), {
      status: 500,
      headers: { "Content-Type": "application/json" },
    });
  }
}

export async function POST(request: Request) {
  try {
    const json = await request.json();

    let json_response = {
      status: "success",
      data: json,
    };
    return new NextResponse(JSON.stringify(json_response), {
      status: 201,
      headers: { "Content-Type": "application/json" },
    });
  } catch (error: any) {
    if (error.code === "P2002") {
      let error_response = {
        status: "fail",
        message: "Feedback with title already exists",
      };
      return new NextResponse(JSON.stringify(error_response), {
        status: 409,
        headers: { "Content-Type": "application/json" },
      });
    }

    let error_response = {
      status: "error",
      message: error.message,
    };
    return new NextResponse(JSON.stringify(error_response), {
      status: 500,
      headers: { "Content-Type": "application/json" },
    });
  }
}
